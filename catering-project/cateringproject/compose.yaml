services:
  api: &api
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - database
      - cache
      - mailing
    volumes:
      - ./:/app/
  worker-default:
    <<: *api
    container_name: catering-worker-default
    entrypoint: bash
    command: -c "celery -A cateringproject worker -l INFO -Q default"
    environment:
      - C_FORCE_ROOT=true
    depends_on:
      - broker
    ports: []
  worker-high-priority:
    <<: *api
    container_name: catering-worker-high-priority
    entrypoint: bash
    command: -c "celery -A cateringproject worker -l INFO -Q high_priority"
    environment:
      - C_FORCE_ROOT=true
    depends_on:
      - broker
    ports: []
  worker-low-priority:
    <<: *api
    container_name: catering-worker-low-priority
    entrypoint: bash
    command: -c "celery -A cateringproject worker -l INFO -Q low_priority"
    environment:
      - C_FORCE_ROOT=true
    depends_on:
      - broker
    ports: [ ]
  database:
    image: postgres:17.5
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  cache:
    image: redis:7
    ports:
      - "6379:6379"
  broker:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
  mailing:
    image: axllent/mailpit:latest
    ports:
      - "1025:1025"
      - "8025:8025"
  silpo-mock:
    build:
      context: .
      dockerfile: Dockerfile.test
      target: silpo
    container_name: catering-silpo-mock
    ports:
      - "8001:8000"
  kfc-mock:
    build:
      context: .
      dockerfile: Dockerfile.test
      target: kfc
    container_name: catering-kfc-mock
    ports:
      - "8002:8000"
  uklon-mock:
    build:
      context: .
      dockerfile: Dockerfile.test
      target: uklon
    container_name: catering-uklon-mock
    ports:
      - "8003:8000"

volumes:
  pgdata: